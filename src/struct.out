; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

define i32 @main() {
entry:
  %a = alloca { i32, i32 }, align 8
  %b = alloca { i32, i32 }, align 8
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %tmp = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 0
  store i32 1, i32* %tmp, align 4
  %tmp1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  store i32 2, i32* %tmp1, align 4
  %tmp2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %b, i32 0, i32 0
  store i32 3, i32* %tmp2, align 4
  %tmp3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %b, i32 0, i32 1
  store i32 4, i32* %tmp3, align 4
  %field_ptr = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 0
  %field_val = load i32, i32* %field_ptr, align 4
  store i32 %field_val, i32* %c, align 4
  %field_ptr4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  %field_val5 = load i32, i32* %field_ptr4, align 4
  store i32 %field_val5, i32* %d, align 4
  %c6 = load i32, i32* %c, align 4
  %d7 = load i32, i32* %d, align 4
  %tmp8 = add i32 %c6, %d7
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp8)
  ret i32 0
}

declare i32 @printf(i8*, ...)
