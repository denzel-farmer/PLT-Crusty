; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.3 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@globalstring = private unnamed_addr constant [7 x i8] c"hello\0A\00", align 1

define i32 @add(i32* %0, { i32, i32 }* %1, { i32, i32 }* %2) {
entry:
  %x = alloca i32*, align 8
  store i32* %0, i32** %x, align 8
  %z = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %1, { i32, i32 }** %z, align 8
  %b = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %2, { i32, i32 }** %b, align 8
  %y = alloca i32, align 4
  %w = alloca { i32, i32 }, align 8
  %v = alloca { i32, i32 }, align 8
  %a = alloca i32, align 4
  %tmp = load i32*, i32** %x, align 8
  %x_val = load i32, i32* %tmp, align 4
  %tmp1 = add i32 %x_val, 2
  store i32 %tmp1, i32* %y, align 4
  %deref = load i32*, i32** %x, align 8
  store i32 333, i32* %deref, align 4
  %z2 = load { i32, i32 }*, { i32, i32 }** %z, align 8
  store { i32, i32 }* %z2, { i32, i32 }** %b, align 8
  %tmp3 = load { i32, i32 }*, { i32, i32 }** %b, align 8
  %tmp4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tmp3, i32 0, i32 0
  store i32 4, i32* %tmp4, align 4
  %y5 = load i32, i32* %y, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %y5)
  %tmp6 = load { i32, i32 }*, { i32, i32 }** %z, align 8
  %z_val = load { i32, i32 }, { i32, i32 }* %tmp6, align 4
  store { i32, i32 } %z_val, { i32, i32 }* %v, align 4
  %x7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %w, i32 0, i32 0
  %tmp8 = load i32, i32* %x7, align 4
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp8)
  %y10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %w, i32 0, i32 1
  %tmp11 = load i32, i32* %y10, align 4
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp11)
  %tmp13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %w, i32 0, i32 1
  store i32 245, i32* %tmp13, align 4
  %y14 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %w, i32 0, i32 1
  %tmp15 = load i32, i32* %y14, align 4
  %printf16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp15)
  %y17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %w, i32 0, i32 1
  %tmp18 = load i32, i32* %y17, align 4
  %y19 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %v, i32 0, i32 1
  %tmp20 = load i32, i32* %y19, align 4
  %tmp21 = add i32 %tmp18, %tmp20
  store i32 %tmp21, i32* %a, align 4
  %a22 = load i32, i32* %a, align 4
  %printf23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %a22)
  %y24 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %v, i32 0, i32 1
  %tmp25 = load i32, i32* %y24, align 4
  %printf26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp25)
  %tmp27 = load { i32, i32 }*, { i32, i32 }** %z, align 8
  %y28 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tmp27, i32 0, i32 1
  %tmp29 = load i32, i32* %y28, align 4
  %printf30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp29)
  ret i32 0
}

define i32 @main(i32 %0) {
entry:
  %y = alloca i32, align 4
  store i32 %0, i32* %y, align 4
  %a = alloca { i32, i32 }, align 8
  %p = alloca { i32, i32 }, align 8
  %g = alloca i32, align 4
  %x = alloca i32, align 4
  %z = alloca i32, align 4
  %s = alloca i8*, align 8
  %b = alloca i1, align 1
  %b1 = alloca i1, align 1
  %c = alloca i8, align 1
  %f = alloca float, align 4
  store i32 3, i32* %g, align 4
  %tmp = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 0
  store i32 111, i32* %tmp, align 4
  %tmp1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  store i32 222, i32* %tmp1, align 4
  %add_result = call i32 @add(i32* %g, { i32, i32 }* %a, { i32, i32 }* %p)
  %x2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 0
  %tmp3 = load i32, i32* %x2, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %tmp3)
  %y4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  %tmp5 = load i32, i32* %y4, align 4
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %tmp5)
  %g7 = load i32, i32* %g, align 4
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %g7)
  %tmp9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  store i32 2, i32* %tmp9, align 4
  %tmp10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %p, i32 0, i32 0
  store i32 3, i32* %tmp10, align 4
  store i32 4, i32* %x, align 4
  %x11 = load i32, i32* %x, align 4
  %x12 = load i32, i32* %x, align 4
  %tmp13 = add i32 %x11, %x12
  store i32 %tmp13, i32* %y, align 4
  %y14 = load i32, i32* %y, align 4
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i32 %y14)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @globalstring, i32 0, i32 0), i8** %s, align 8
  store i1 false, i1* %b, align 1
  store i1 true, i1* %b1, align 1
  store i8 99, i8* %c, align 1
  store float 0x40091EB840000000, float* %f, align 4
  %z16 = alloca i32, align 4
  store i32 1, i32* %z16, align 4
  store i32 3, i32* %z, align 4
  ret i32 0
}

declare i32 @printf(i8*, ...)
