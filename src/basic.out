; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@globalstring = private unnamed_addr constant [7 x i8] c"hello\0A\00", align 1

define i32 @main(i32 %0) {
entry:
  %y = alloca i32, align 4
  store i32 %0, i32* %y, align 4
  %a = alloca { i32, i32 }, align 8
  %p = alloca { i32, i32 }, align 8
  %g = alloca i32*, align 8
  %x = alloca i32, align 4
  %z = alloca i32, align 4
  %s = alloca i8*, align 8
  %b = alloca i1, align 1
  %b1 = alloca i1, align 1
  %c = alloca i8, align 1
  %f = alloca float, align 4
  %y1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  store i32 2, i32* %y1, align 4
  %x2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %p, i32 0, i32 0
  store i32 3, i32* %x2, align 4
  %x3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 0
  %tmp = load i32, i32* %x3, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp)
  %y4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %a, i32 0, i32 1
  %tmp5 = load i32, i32* %y4, align 4
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp5)
  %x7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %p, i32 0, i32 0
  %tmp8 = load i32, i32* %x7, align 4
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %tmp8)
  store i32 4, i32* %x, align 4
  %x10 = load i32, i32* %x, align 4
  store i32 %x10, i32* %y, align 4
  %y11 = load i32, i32* %y, align 4
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %y11)
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @globalstring, i32 0, i32 0), i8** %s, align 8
  store i1 false, i1* %b, align 1
  store i1 true, i1* %b1, align 1
  store i8 99, i8* %c, align 1
  store float 0x40091EB840000000, float* %f, align 4
  %z13 = alloca i32, align 4
  store i32 1, i32* %z13, align 4
  store i32 3, i32* %z, align 4
  ret i32 0
}

declare i32 @printf(i8*, ...)
