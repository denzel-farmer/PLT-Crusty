; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring = private unnamed_addr constant [19 x i8] c"Sys call: getsize\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.2 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.3 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.4 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.5 = private unnamed_addr constant [16 x i8] c"Sys call: open\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.7 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.8 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.10 = private unnamed_addr constant [17 x i8] c"Sys call: close\0A\00", align 1
@fmt.11 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.12 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.13 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.14 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.15 = private unnamed_addr constant [17 x i8] c"Sys call: write\0A\00", align 1
@fmt.16 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.17 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.18 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.19 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.20 = private unnamed_addr constant [16 x i8] c"Sys call: read\0A\00", align 1
@globalstring.21 = private unnamed_addr constant [13 x i8] c"file content\00", align 1
@fmt.22 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.23 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.24 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.26 = private unnamed_addr constant [19 x i8] c"Library Open File\0A\00", align 1
@globalstring.27 = private unnamed_addr constant [14 x i8] c"Opened file: \00", align 1
@globalstring.28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@fmt.29 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.30 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.31 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.32 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.33 = private unnamed_addr constant [20 x i8] c"Library Close File\0A\00", align 1
@fmt.34 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.35 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.36 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.37 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.38 = private unnamed_addr constant [19 x i8] c"Library Read File\0A\00", align 1
@globalstring.39 = private unnamed_addr constant [11 x i8] c"Read file:\00", align 1
@fmt.40 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.41 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.42 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.43 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.44 = private unnamed_addr constant [20 x i8] c"Library Write File\0A\00", align 1
@fmt.45 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.46 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.47 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.48 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.49 = private unnamed_addr constant [9 x i8] c"file.txt\00", align 1
@globalstring.50 = private unnamed_addr constant [12 x i8] c"new content\00", align 1
@fmt.51 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.52 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.53 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.54 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring.55 = private unnamed_addr constant [9 x i8] c"file.txt\00", align 1
@fmt.56 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt.57 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt.58 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt.59 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i32 @sys_getsize(i8* %0) {
entry:
  %path = alloca i8*, align 8
  store i8* %0, i8** %path, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @globalstring, i32 0, i32 0))
  ret i32 100
}

define i32 @sys_open(i8* %0) {
entry:
  %path = alloca i8*, align 8
  store i8* %0, i8** %path, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @globalstring.5, i32 0, i32 0))
  ret i32 3
}

define i32 @sys_close(i32 %0) {
entry:
  %file_pointer = alloca i32, align 4
  store i32 %0, i32* %file_pointer, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.9, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @globalstring.10, i32 0, i32 0))
  ret i32 0
}

define i32 @sys_write(i32 %0, i8* %1) {
entry:
  %file_pointer = alloca i32, align 4
  store i32 %0, i32* %file_pointer, align 4
  %content = alloca i8*, align 8
  store i8* %1, i8** %content, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.14, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @globalstring.15, i32 0, i32 0))
  ret i32 0
}

define i8* @sys_read(i32 %0, i32 %1) {
entry:
  %file_pointer = alloca i32, align 4
  store i32 %0, i32* %file_pointer, align 4
  %size = alloca i32, align 4
  store i32 %1, i32* %size, align 4
  %content = alloca i8*, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.19, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @globalstring.20, i32 0, i32 0))
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @globalstring.21, i32 0, i32 0), i8** %content, align 8
  %content1 = load i8*, i8** %content, align 8
  ret i8* %content1
}

define { i8*, i32, i32 } @open_file(i8* %0) {
entry:
  %path = alloca i8*, align 8
  store i8* %0, i8** %path, align 8
  %file_pointer = alloca i32, align 4
  %size = alloca i32, align 4
  %file = alloca { i8*, i32, i32 }, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.25, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @globalstring.26, i32 0, i32 0))
  %path1 = load i8*, i8** %path, align 8
  %sys_open_result = call i32 @sys_open(i8* %path1)
  store i32 %sys_open_result, i32* %file_pointer, align 4
  %path2 = load i8*, i8** %path, align 8
  %sys_getsize_result = call i32 @sys_getsize(i8* %path2)
  store i32 %sys_getsize_result, i32* %size, align 4
  %path3 = load i8*, i8** %path, align 8
  %tmp = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 0
  store i8* %path3, i8** %tmp, align 8
  %file_pointer4 = load i32, i32* %file_pointer, align 4
  %tmp5 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 1
  store i32 %file_pointer4, i32* %tmp5, align 4
  %size6 = load i32, i32* %size, align 4
  %tmp7 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 2
  store i32 %size6, i32* %tmp7, align 4
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.25, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @globalstring.27, i32 0, i32 0))
  %path9 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 0
  %tmp10 = load i8*, i8** %path9, align 8
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.25, i32 0, i32 0), i8* %tmp10)
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @globalstring.28, i32 0, i32 0))
  %file13 = load { i8*, i32, i32 }, { i8*, i32, i32 }* %file, align 8
  ret { i8*, i32, i32 } %file13
}

define i32 @close_file({ i8*, i32, i32 } %0) {
entry:
  %file = alloca { i8*, i32, i32 }, align 8
  store { i8*, i32, i32 } %0, { i8*, i32, i32 }* %file, align 8
  %file_pointer = alloca i32, align 4
  %size = alloca i32, align 4
  %path = alloca i8*, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.32, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @globalstring.33, i32 0, i32 0))
  %field_ptr = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 0
  %field_val = load i8*, i8** %field_ptr, align 8
  store i8* %field_val, i8** %path, align 8
  %field_ptr1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 1
  %field_val2 = load i32, i32* %field_ptr1, align 4
  store i32 %field_val2, i32* %file_pointer, align 4
  %field_ptr3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 2
  %field_val4 = load i32, i32* %field_ptr3, align 4
  store i32 %field_val4, i32* %size, align 4
  %file_pointer5 = load i32, i32* %file_pointer, align 4
  %sys_close_result = call i32 @sys_close(i32 %file_pointer5)
  ret i32 0
}

define i32 @read_file({ i8*, i32, i32 }* %0) {
entry:
  %file = alloca { i8*, i32, i32 }*, align 8
  store { i8*, i32, i32 }* %0, { i8*, i32, i32 }** %file, align 8
  %content = alloca i8*, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.37, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @globalstring.38, i32 0, i32 0))
  %tmp = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %file, align 8
  %size = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %tmp, i32 0, i32 2
  %tmp1 = load i32, i32* %size, align 4
  %tmp2 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %file, align 8
  %file_pointer = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %tmp2, i32 0, i32 1
  %tmp3 = load i32, i32* %file_pointer, align 4
  %sys_read_result = call i8* @sys_read(i32 %tmp3, i32 %tmp1)
  store i8* %sys_read_result, i8** %content, align 8
  %printf4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @globalstring.39, i32 0, i32 0))
  ret i32 0
}

define { i8*, i32, i32 } @write_file({ i8*, i32, i32 } %0, i8* %1) {
entry:
  %file = alloca { i8*, i32, i32 }, align 8
  store { i8*, i32, i32 } %0, { i8*, i32, i32 }* %file, align 8
  %new_contents = alloca i8*, align 8
  store i8* %1, i8** %new_contents, align 8
  %file_pointer = alloca i32, align 4
  %size = alloca i32, align 4
  %path = alloca i8*, align 8
  %new_file = alloca { i8*, i32, i32 }, align 8
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt.43, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @globalstring.44, i32 0, i32 0))
  %field_ptr = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 0
  %field_val = load i8*, i8** %field_ptr, align 8
  store i8* %field_val, i8** %path, align 8
  %field_ptr1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 1
  %field_val2 = load i32, i32* %field_ptr1, align 4
  store i32 %field_val2, i32* %file_pointer, align 4
  %field_ptr3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %file, i32 0, i32 2
  %field_val4 = load i32, i32* %field_ptr3, align 4
  store i32 %field_val4, i32* %size, align 4
  %new_contents5 = load i8*, i8** %new_contents, align 8
  %file_pointer6 = load i32, i32* %file_pointer, align 4
  %sys_write_result = call i32 @sys_write(i32 %file_pointer6, i8* %new_contents5)
  %path7 = load i8*, i8** %path, align 8
  %tmp = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %new_file, i32 0, i32 0
  store i8* %path7, i8** %tmp, align 8
  %file_pointer8 = load i32, i32* %file_pointer, align 4
  %tmp9 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %new_file, i32 0, i32 1
  store i32 %file_pointer8, i32* %tmp9, align 4
  %path10 = load i8*, i8** %path, align 8
  %sys_getsize_result = call i32 @sys_getsize(i8* %path10)
  %tmp11 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %new_file, i32 0, i32 2
  store i32 %sys_getsize_result, i32* %tmp11, align 4
  %new_file12 = load { i8*, i32, i32 }, { i8*, i32, i32 }* %new_file, align 8
  ret { i8*, i32, i32 } %new_file12
}

define i32 @correct_complex() {
entry:
  %file = alloca { i8*, i32, i32 }, align 8
  %content = alloca i32, align 4
  %open_file_result = call { i8*, i32, i32 } @open_file(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @globalstring.49, i32 0, i32 0))
  store { i8*, i32, i32 } %open_file_result, { i8*, i32, i32 }* %file, align 8
  %read_file_result = call i32 @read_file({ i8*, i32, i32 }* %file)
  store i32 %read_file_result, i32* %content, align 4
  %file1 = load { i8*, i32, i32 }, { i8*, i32, i32 }* %file, align 8
  %write_file_result = call { i8*, i32, i32 } @write_file({ i8*, i32, i32 } %file1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @globalstring.50, i32 0, i32 0))
  store { i8*, i32, i32 } %write_file_result, { i8*, i32, i32 }* %file, align 8
  %file2 = load { i8*, i32, i32 }, { i8*, i32, i32 }* %file, align 8
  %close_file_result = call i32 @close_file({ i8*, i32, i32 } %file2)
  ret i32 0
}

define i32 @correct_simple() {
entry:
  %file = alloca { i8*, i32, i32 }, align 8
  %content = alloca i32, align 4
  %open_file_result = call { i8*, i32, i32 } @open_file(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @globalstring.55, i32 0, i32 0))
  store { i8*, i32, i32 } %open_file_result, { i8*, i32, i32 }* %file, align 8
  %read_file_result = call i32 @read_file({ i8*, i32, i32 }* %file)
  store i32 %read_file_result, i32* %content, align 4
  %file1 = load { i8*, i32, i32 }, { i8*, i32, i32 }* %file, align 8
  %close_file_result = call i32 @close_file({ i8*, i32, i32 } %file1)
  ret i32 0
}

define i32 @main() {
entry:
  %correct_simple_result = call i32 @correct_simple()
  %correct_complex_result = call i32 @correct_complex()
  ret i32 0
}

declare i32 @printf(i8*, ...)
