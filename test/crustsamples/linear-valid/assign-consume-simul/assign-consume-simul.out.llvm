; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@globalstring = private unnamed_addr constant [9 x i8] c"result: \00", align 1
@globalstring.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @main() {
entry:
  %new = alloca { i32, i32 }, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %result = alloca i32, align 4
  %tmp = getelementptr inbounds { i32, i32 }, { i32, i32 }* %new, i32 0, i32 0
  store i32 1, i32* %tmp, align 4
  %tmp1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %new, i32 0, i32 1
  store i32 2, i32* %tmp1, align 4
  %new2 = load { i32, i32 }, { i32, i32 }* %new, align 4
  store { i32, i32 } %new2, { i32, i32 }* %new, align 4
  %field_ptr = getelementptr inbounds { i32, i32 }, { i32, i32 }* %new, i32 0, i32 0
  %field_val = load i32, i32* %field_ptr, align 4
  store i32 %field_val, i32* %x, align 4
  %field_ptr3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %new, i32 0, i32 1
  %field_val4 = load i32, i32* %field_ptr3, align 4
  store i32 %field_val4, i32* %y, align 4
  %x5 = load i32, i32* %x, align 4
  %y6 = load i32, i32* %y, align 4
  %tmp7 = add i32 %x5, %y6
  store i32 %tmp7, i32* %result, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @globalstring, i32 0, i32 0))
  %result8 = load i32, i32* %result, align 4
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %result8)
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str_fmt, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @globalstring.1, i32 0, i32 0))
  %result11 = load i32, i32* %result, align 4
  ret i32 %result11
}

declare i32 @printf(i8*, ...)
