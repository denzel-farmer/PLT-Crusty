; ModuleID = 'Crusty'
source_filename = "Crusty"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@char_fmt = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@float_fmt = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@str_fmt = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define i8 @main() {
entry:
  %new = alloca { i32, i32, { i8 } }, align 8
  %init_info = alloca { i8 }, align 8
  %second_info = alloca { i8 }, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %c = alloca i8, align 1
  %tmp = getelementptr inbounds { i8 }, { i8 }* %init_info, i32 0, i32 0
  store i8 97, i8* %tmp, align 1
  %tmp1 = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 0
  store i32 1, i32* %tmp1, align 4
  %tmp2 = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 1
  store i32 2, i32* %tmp2, align 4
  %init_info3 = load { i8 }, { i8 }* %init_info, align 1
  %tmp4 = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 2
  store { i8 } %init_info3, { i8 }* %tmp4, align 1
  %field_ptr = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 0
  %field_val = load i32, i32* %field_ptr, align 4
  store i32 %field_val, i32* %x, align 4
  %field_ptr5 = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 1
  %field_val6 = load i32, i32* %field_ptr5, align 4
  store i32 %field_val6, i32* %y, align 4
  %field_ptr7 = getelementptr inbounds { i32, i32, { i8 } }, { i32, i32, { i8 } }* %new, i32 0, i32 2
  %field_val8 = load { i8 }, { i8 }* %field_ptr7, align 1
  store { i8 } %field_val8, { i8 }* %second_info, align 1
  %field_ptr9 = getelementptr inbounds { i8 }, { i8 }* %second_info, i32 0, i32 0
  %field_val10 = load i8, i8* %field_ptr9, align 1
  store i8 %field_val10, i8* %c, align 1
  %c11 = load i8, i8* %c, align 1
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @char_fmt, i32 0, i32 0), i8 %c11)
  %c12 = load i8, i8* %c, align 1
  ret i8 %c12
}

declare i32 @printf(i8*, ...)
