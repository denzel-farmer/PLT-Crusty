[INFO] Begin checking linearity, generating program info
[INFO] Generated program info, checking linearity of functions
[INFO] Checking linearity of function: main
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: init_info -> Unassigned : struct point_info

[INFO] Checking expression
[DEBUG] Expression is  "struct point_info struct point_info init_info = struct point_info { struct point_info -> unrestricted char 'a'}"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "struct point_info init_info = struct point_info { struct point_info -> unrestricted char 'a'}"
[INFO] Checking expression
[DEBUG] Expression is  "struct point_info { struct point_info -> unrestricted char 'a'}"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted char 'a'"
[INFO] Marking init_info as assigned
[INFO] Checking expression
[DEBUG] Expression is  "struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2, struct point_info init_info}"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 1"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 2"
[INFO] Checking expression
[DEBUG] Expression is  "struct point_info init_info"
Checking lone identifier "init_info" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted char 'a')"
[DEBUG] Checked statements, lin_map: Linear variable init_info cannot be silently discarded
[DEBUG] Final lin_map for main Linear variable init_info cannot be silently discarded
[INFO] Done checking linearity

Abstract Syntax Tree:
linear struct point_info {
unrestricted char c;
};
linear struct lin_point {
unrestricted int x;
unrestricted int y;
struct point_info info;
};
unrestricted char main() {
struct point_info init_info;
init_info = { struct point_info -> 'a'};
{ struct lin_point -> 1, 2, init_info};
return 'a';
}

Semantic Checked Abstract Syntax Tree:
linear struct point_info {
unrestricted char c;
};
linear struct lin_point {
unrestricted int x;
unrestricted int y;
struct point_info info;
};
unrestricted char main() {
struct point_info init_info;
struct point_info struct point_info init_info = struct point_info { struct point_info -> unrestricted char 'a'};
struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2, struct point_info init_info};
return unrestricted char 'a';
}

Linearity Results:
LINEAR CHECK FAIL
Program Info:
Struct Info:
lin_point -> linear struct lin_point {
unrestricted int x;
unrestricted int y;
struct point_info info;
}
point_info -> linear struct point_info {
unrestricted char c;
}

Func Info:
[]
Linear Maps:
main -> Linear variable init_info cannot be silently discarded

