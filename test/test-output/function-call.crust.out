[INFO] Begin checking linearity, generating program info
[INFO] Generated program info, checking linearity of functions
[INFO] Checking linearity of function: sum
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int c = unrestricted int unrestricted int a + unrestricted int b"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int c = unrestricted int unrestricted int a + unrestricted int b"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int a + unrestricted int b"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int a"
Checking lone identifier "a" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int b"
Checking lone identifier "b" (is_consumed=false)
[INFO] Marking c as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted int c)"
[INFO] Checking function call to return
[DEBUG] Function call args: unrestricted int c
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int c"
Checking lone identifier "c" (is_consumed=true)
[INFO] Marking c as consumed
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[DEBUG] Didn't find decl c, assuming unrestricted
[DEBUG] Final lin_map for sum []
[INFO] Checking linearity of function: main
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int a = unrestricted int 1"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int a = unrestricted int 1"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 1"
[INFO] Marking a as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int b = unrestricted int 2"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int b = unrestricted int 2"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 2"
[INFO] Marking b as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int c = unrestricted int sum(unrestricted int a, unrestricted int b)"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int c = unrestricted int sum(unrestricted int a, unrestricted int b)"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int sum(unrestricted int a, unrestricted int b)"
[INFO] Checking function call to sum
[DEBUG] Function call args: unrestricted int a, unrestricted int b
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int a"
Checking lone identifier "a" (is_consumed=true)
[INFO] Marking a as consumed
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int b"
Checking lone identifier "b" (is_consumed=true)
[INFO] Marking b as consumed
[INFO] Marking c as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted int 0)"
[INFO] Checking function call to return
[DEBUG] Function call args: unrestricted int 0
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 0"
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[DEBUG] Didn't find decl a, assuming unrestricted
[DEBUG] Didn't find decl b, assuming unrestricted
[DEBUG] Didn't find decl c, assuming unrestricted
[DEBUG] Final lin_map for main []
[INFO] Done checking linearity

Abstract Syntax Tree:
unrestricted int sum(unrestricted int a, unrestricted int b) {
unrestricted int c;
c = a + b;
return c;
}unrestricted int main() {
unrestricted int a;
unrestricted int b;
unrestricted int c;
a = 1;
b = 2;
c = sum(a, b);
return 0;
}

Semantic Checked Abstract Syntax Tree:
unrestricted int sum(unrestricted int a, unrestricted int b) {
unrestricted int c;
unrestricted int unrestricted int c = unrestricted int unrestricted int a + unrestricted int b;
return unrestricted int c;
}unrestricted int main() {
unrestricted int a;
unrestricted int b;
unrestricted int c;
unrestricted int unrestricted int a = unrestricted int 1;
unrestricted int unrestricted int b = unrestricted int 2;
unrestricted int unrestricted int c = unrestricted int sum(unrestricted int a, unrestricted int b);
return unrestricted int 0;
}

Linearity Results:
LINEAR CHECK SUCCESS
Program Info:
Struct Info:
[]
Func Info:
[]
Linear Maps:
sum -> []
main -> []


COMPILATION SUCCESS
