[INFO] Begin checking linearity, generating program info
[INFO] Generated program info, checking linearity of functions
[INFO] Checking linearity of function: main
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted bool unrestricted int a == unrestricted int 1"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int a"
Checking lone identifier "a" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 1"
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int b = unrestricted int 2"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int b = unrestricted int 2"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 2"
[INFO] Marking b as assigned
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[INFO] Merging two branches
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted bool unrestricted int a == unrestricted int 2"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int a"
Checking lone identifier "a" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 2"
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int b = unrestricted int 3"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int b = unrestricted int 3"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 3"
[INFO] Marking b as assigned
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int b = unrestricted int 4"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int b = unrestricted int 4"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 4"
[INFO] Marking b as assigned
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[INFO] Merging two branches
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted int b)"
[INFO] Checking function call to return
[DEBUG] Function call args: unrestricted int b
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int b"
Checking lone identifier "b" (is_consumed=true)
[INFO] Marking b as consumed
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[DEBUG] Didn't find decl a, assuming unrestricted
[DEBUG] Didn't find decl b, assuming unrestricted
[DEBUG] Final lin_map for main []
[INFO] Done checking linearity

Abstract Syntax Tree:
unrestricted int main() {
unrestricted int a;
unrestricted int b;
if (a == 1)
{
b = 2
}
else
{

};
if (a == 2)
{
b = 3
}
else
{
b = 4
};
return b;
}

Semantic Checked Abstract Syntax Tree:
unrestricted int main() {
unrestricted int a;
unrestricted int b;
if (unrestricted bool unrestricted int a == unrestricted int 1)
{
unrestricted int unrestricted int b = unrestricted int 2
}
else
{

};
if (unrestricted bool unrestricted int a == unrestricted int 2)
{
unrestricted int unrestricted int b = unrestricted int 3
}
else
{
unrestricted int unrestricted int b = unrestricted int 4
};
return unrestricted int b;
}

Linearity Results:
LINEAR CHECK SUCCESS
Program Info:
Struct Info:
[]
Func Info:
[]
Linear Maps:
main -> []


COMPILATION SUCCESS
