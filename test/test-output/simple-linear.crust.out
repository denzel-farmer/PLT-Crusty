[INFO] Begin checking linearity, generating program info
[INFO] Generated program info, checking linearity of functions
[INFO] Checking linearity of function: main
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: a -> Unassigned : linear int

[INFO] Checking expression
[DEBUG] Expression is  "linear int linear int a = unrestricted int 1"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "linear int a = unrestricted int 1"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 1"
[INFO] Marking a as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(linear int a)"
[INFO] Checking function call to return
[DEBUG] Function call args: linear int a
[INFO] Checking expression
[DEBUG] Expression is  "linear int a"
Checking lone identifier "a" (is_consumed=true)
[INFO] Marking a as consumed
[DEBUG] Checked statements, lin_map: a -> Used : linear int

[INFO] Removing locally declared variables
[INFO] Found a with state Used
[DEBUG] Final lin_map for main []
[INFO] Done checking linearity

Abstract Syntax Tree:
linear int main() {
linear int a;
a = 1;
return a;
}

Semantic Checked Abstract Syntax Tree:
linear int main() {
linear int a;
linear int linear int a = unrestricted int 1;
return linear int a;
}

Linearity Results:
LINEAR CHECK SUCCESS
Program Info:
Struct Info:
[]
Func Info:
main -> linear int main() {
linear int a;
linear int linear int a = unrestricted int 1;
return linear int a;
}

Linear Maps:
main -> []


COMPILATION SUCCESS
