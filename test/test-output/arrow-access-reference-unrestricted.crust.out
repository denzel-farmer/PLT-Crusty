[INFO] Begin checking linearity, generating program info
[INFO] Generated program info, checking linearity of functions
[INFO] Checking linearity of function: sum
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted int unrestricted int p->x + unrestricted int p->y)"
[INFO] Checking function call to return
[DEBUG] Function call args: unrestricted int unrestricted int p->x + unrestricted int p->y
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int p->x + unrestricted int p->y"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int p->x"
[DEBUG] Variable p not found, assuming unrestricted
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int p->y"
[DEBUG] Variable p not found, assuming unrestricted
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[DEBUG] Final lin_map for sum []
[INFO] Checking linearity of function: main
[DEBUG] Added args to lin_map: []
[INFO] Checking function body
[INFO] Checking new block
[DEBUG] Added locals to lin_map: []
[INFO] Checking expression
[DEBUG] Expression is  "struct lin_point struct lin_point new = struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2}"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "struct lin_point new = struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2}"
[INFO] Checking expression
[DEBUG] Expression is  "struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2}"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 1"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int 2"
[INFO] Marking new as assigned
[INFO] Checking expression
[DEBUG] Expression is  "struct lin_point :{x, y} = struct lin_point new"
[INFO] Checking assignment expression
[DEBUG] Assignment is  ":{x, y} = struct lin_point new"
[INFO] Checking expression
[DEBUG] Expression is  "struct lin_point new"
Checking lone identifier "new" (is_consumed=true)
[INFO] Marking new as consumed
[INFO] Marking x as assigned
[INFO] Marking y as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int result = unrestricted int sum(ref struct lin_point &new)"
[INFO] Checking assignment expression
[DEBUG] Assignment is  "unrestricted int result = unrestricted int sum(ref struct lin_point &new)"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int sum(ref struct lin_point &new)"
[INFO] Checking function call to sum
[DEBUG] Function call args: ref struct lin_point &new
[INFO] Checking expression
[DEBUG] Expression is  "ref struct lin_point &new"
[DEBUG] Not in lin_map, must be unrestricted borrow
[INFO] Marking result as assigned
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int return(unrestricted bool unrestricted int result == unrestricted int unrestricted int x + unrestricted int y)"
[INFO] Checking function call to return
[DEBUG] Function call args: unrestricted bool unrestricted int result == unrestricted int unrestricted int x + unrestricted int y
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted bool unrestricted int result == unrestricted int unrestricted int x + unrestricted int y"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int result"
Checking lone identifier "result" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int unrestricted int x + unrestricted int y"
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int x"
Checking lone identifier "x" (is_consumed=false)
[INFO] Checking expression
[DEBUG] Expression is  "unrestricted int y"
Checking lone identifier "y" (is_consumed=false)
[DEBUG] Checked statements, lin_map: []
[INFO] Removing locally declared variables
[DEBUG] Didn't find decl new, assuming unrestricted
[DEBUG] Didn't find decl result, assuming unrestricted
[DEBUG] Didn't find decl x, assuming unrestricted
[DEBUG] Didn't find decl y, assuming unrestricted
[DEBUG] Final lin_map for main []
[INFO] Done checking linearity

Abstract Syntax Tree:
unrestricted struct lin_point {
unrestricted int x;
unrestricted int y;
};
unrestricted int sum(ref struct lin_point p) {
;
;
return p->x + p->y;
}unrestricted bool main() {
struct lin_point new;
unrestricted int result;
unrestricted int x;
unrestricted int y;
new = { struct lin_point -> 1, 2};
:{x, y} = new;
result = sum(&new);
return result == x + y;
}

Semantic Checked Abstract Syntax Tree:
unrestricted struct lin_point {
unrestricted int x;
unrestricted int y;
};
unrestricted int sum(ref struct lin_point p) {
;
;
return unrestricted int unrestricted int p->x + unrestricted int p->y;
}unrestricted bool main() {
struct lin_point new;
unrestricted int result;
unrestricted int x;
unrestricted int y;
struct lin_point struct lin_point new = struct lin_point { struct lin_point -> unrestricted int 1, unrestricted int 2};
struct lin_point :{x, y} = struct lin_point new;
unrestricted int unrestricted int result = unrestricted int sum(ref struct lin_point &new);
return unrestricted bool unrestricted int result == unrestricted int unrestricted int x + unrestricted int y;
}

Linearity Results:
LINEAR CHECK SUCCESS
Program Info:
Struct Info:
[]
Func Info:
[]
Linear Maps:
sum -> []
main -> []


COMPILATION SUCCESS
